[tool.poetry]
name = "github-em"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]
license = ""

[tool.poetry.dependencies]
python = ">3.9.7,<3.11"
boto3 = "1.26.76"       # interact with AWS services
# both module versions should exactly match boto3's version
mypy-boto3 = "1.26.76"
boto3-stubs = { version = "1.26.76", extras = [
    "glue",
    "athena",
    "s3",
    "secretsmanager",
] }
shapely = "^1.6" # geometry manipulations
streamlit = ">=1.13"
pandas = "^1.2"
tabulate = "^0.9.0"
psycopg2-binary = "^2.8.6"
matplotlib = "^3.3"
gspread = "^3.2.0" # interact with Google sheets
python-dotenv = "^0.11.0" # load env variable from `.env` files
seaborn = ">=0.11" # improvements for matplotlib
pyproj = ">=3.6.0" # geospatital projections
locationiq = "^0.0.2" # geocoding
pyarrow = ">=12.0.1" # parquet file support
area = "^1.1.1" # compute area in meters from polygons
python-dateutil = "^2.8"
xlrd = "^1.2.0" # interact with excel sheets
scikit-learn = ">=0.24"
s3fs = "^0.5" # allows pd.read_csv("s3://...")
selenium = "^3.141.0"
geopandas = "^0.11.0"
plotly = ">=5"
oauth2client = "^4.1.3"
openpyxl = "^3.0.7"
PyPika = "^0.48.8"
sqlparse = "^0.4.1"
pypmml = "^0.9.11"
pyspark2pmml = "^0.5.1"
hyperopt = "^0.2.5"
click = "^8.0.3"
# Version 1.16 is pinned because of this: https://github.com/logdna/python/issues/74
logdna = "1.16"
altair = "^4.2.0"
Jinja2 = "^3.1.2"
pycryptodome = "^3.15.0"
statsmodels = "^0.13.5"
scipy = "1.8.1"
thefuzz = "^0.20.0"
streamlit-searchbox = "^0.1.6"
rtree = "^1.0.1"
geopy = "^2.4.0"
ipykernel = "^6.29.5"

[tool.poetry.group.dev.dependencies]
ruff = "^0.1.6"
mypy = "^1.7.0"
pre-commit = "^3.5.0"
pytest = "^6.2"
freezegun = "^1.1.0"
databricks-connect = "^12.2.17"
watchdog = "^2.1.2"
types-python-dateutil = "^0.1.4"
types-freezegun = "^0.1.4"
types-requests = "^2.25.0"
types-tabulate = "^0.9"
presto-python-client = "^0.8.2"
altair-saver = "^0.5.0"
moto = "^4.0.5"

[build-system]
requires = ["poetry-core>=1.4.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
monitoring = "monitoring.commands.main:main"

[tool.ruff]
select = [
    "F", # pyflakes
    "E", # pycodestyle - error
    "W", # pycodestyle - warning
    "I", # isort
]
ignore = ["E203", "E501"]

[tool.ruff.lint.isort]
section-order = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "tests",
    "local-folder",
]

[tool.ruff.lint.isort.sections]
"tests" = ["tests"]

[tool.mypy]
ignore_missing_imports = true
check_untyped_defs = true
allow_redefinition = true
show_error_codes = true
warn_unused_ignores = true


[tool.pytest.ini_options]
# Prevents pytest from adding every test module to the PYTHONPATH
filterwarnings = [
    # Silence a warning triggered by boto3
    # note the use of single quote below to denote "raw" strings in TOML
    'ignore:.*the imp module is deprecated in favour of importlib.*:DeprecationWarning',
    'ignore:Degrees of freedom <= 0 for slice:RuntimeWarning',
    'ignore:divide by zero encountered in divide:RuntimeWarning',
    'ignore:invalid value encountered in multiply:RuntimeWarning',
]
